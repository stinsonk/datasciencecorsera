subject1 <- individuals$`1`
split(subject1, subject1$activity)
splitdata <- split(subject1, subject1$activity)
colMeans(splitdata)
as.matrix(splitdata)
meandata <- matrix(nrow = 0, ncol = length(nameslist))
meandata <- matrix(nrow = 0, ncol = 30)
View(meandata)
run_analysis <- function(){
##First block of code will import important files from working directory.  Requires the following files to be present in the WD:
##features.txt, activity_labels.txt, X_train.txt, y_train.txt, X_test.txt, y_test.txt, subject_train.txt, subject_test.txt
features <- read.table("features.txt")
activities <- read.table("activity_labels.txt")
subject.test <- read.table("subject_test.txt")
subject.train <- read.table("subject_train.txt")
test <- read.table("X_test.txt")
train <- read.table("X_train.txt")
label.test <- read.table("y_test.txt")
label.train <- read.table("y_train.txt")
##Second block of code will create and modify a list of measurement names, and a variable x to later subset measurement data frames.
##MEasurement names are currently set to take the mean and standard deviation of the 33 main measurements outlined in the features_info.txt file.
##Excluded from this are the meanFreq value from each measurement, and the 5 averaged signal means listed at the bottom of features_info.txt
##Column names had duplicate words and brackets removes, '-' replaced by '.' for easy reading, and otherwise uneddited to allow for easier data manipulation
##and subsetting in downstream applicatons.
x <- grep("mean[^Freq]|std", features$V2)
features <- features[x,]
nameslist <- c("subject", "activity", as.character(features$V2))
nameslist <- tolower(nameslist)
nameslist <- gsub("-", ".", nameslist)
nameslist <- gsub("\\()", "", nameslist)
nameslist <- gsub("bodybody", "body", nameslist)
##Third block of code modifies the activity list to allow more ready data manipulation, changing to lower case, and replacing '_' with '.'
activitylist <- tolower(activities$V2)
activitylist <- gsub("_", ".", activitylist)
##Fourth block of code subsets the test and train measurement data by the field selected above (x), adds subjet and activity data, and combines the two data frames.
##column names and activity names are also added, as selected above, and ordered first by subject, then by (numberic) activity.
test <- cbind(subject.test, label.test, test[,x])
train <- cbind(subject.train, label.train, train[,x])
fulldata <- rbind(train, test)
names(fulldata) <- nameslist
fulldata <- fulldata[order(fulldata$subject, fulldata$activity),]
fulldata <<- within(fulldata, activity <- factor(activity, labels = activitylist))
meandata <- matrix(nrow = 0, ncol = length(nameslist))
i = 1
for(i in 30){
workingsubject <- subset(fulldata, fulldata$subject == i)
y = 1
for(y in 6){
workingactivity <- subset(workingdata, workingdata$activity == y)
temp <- colMeans(workingactivity)
meandata <- rbind(meandata, temp)
y = y + 1
}
i = i + 1
}
meandata <<- meandata
}
run_analysis()
meandata <- matrix(nrow = 0, ncol = length(nameslist))
i = 1
for(i in 30){
workingsubject <- subset(fulldata, fulldata$subject == i)
y = 1
for(y in 6){
workingactivity <- subset(workingsubject, workingsubject$activity == y)
temp <- colMeans(workingactivity)
meandata <- rbind(meandata, temp)
y = y + 1
}
i = i + 1
}
meandata <<- meandata
meandata <- matrix(nrow = 0, ncol = length(nameslist))
i = 1
for(i in 30){
workingsubject <- subset(fulldata, fulldata$subject == i)
y = 1
for(y in 6){
workingactivity <- subset(workingsubject, workingsubject$activity == y)
temp <- colMeans(workingactivity)
meandata <- rbind(meandata, temp)
y = y + 1
}
i = i + 1
}
meandata <<- meandata
run_analysis <- function(){
##First block of code will import important files from working directory.  Requires the following files to be present in the WD:
##features.txt, activity_labels.txt, X_train.txt, y_train.txt, X_test.txt, y_test.txt, subject_train.txt, subject_test.txt
features <- read.table("features.txt")
activities <- read.table("activity_labels.txt")
subject.test <- read.table("subject_test.txt")
subject.train <- read.table("subject_train.txt")
test <- read.table("X_test.txt")
train <- read.table("X_train.txt")
label.test <- read.table("y_test.txt")
label.train <- read.table("y_train.txt")
##Second block of code will create and modify a list of measurement names, and a variable x to later subset measurement data frames.
##MEasurement names are currently set to take the mean and standard deviation of the 33 main measurements outlined in the features_info.txt file.
##Excluded from this are the meanFreq value from each measurement, and the 5 averaged signal means listed at the bottom of features_info.txt
##Column names had duplicate words and brackets removes, '-' replaced by '.' for easy reading, and otherwise uneddited to allow for easier data manipulation
##and subsetting in downstream applicatons.
x <- grep("mean[^Freq]|std", features$V2)
features <- features[x,]
nameslist <- c("subject", "activity", as.character(features$V2))
nameslist <- tolower(nameslist)
nameslist <- gsub("-", ".", nameslist)
nameslist <- gsub("\\()", "", nameslist)
nameslist <- gsub("bodybody", "body", nameslist)
##Third block of code modifies the activity list to allow more ready data manipulation, changing to lower case, and replacing '_' with '.'
activitylist <- tolower(activities$V2)
activitylist <- gsub("_", ".", activitylist)
##Fourth block of code subsets the test and train measurement data by the field selected above (x), adds subjet and activity data, and combines the two data frames.
##column names and activity names are also added, as selected above, and ordered first by subject, then by (numberic) activity.
test <- cbind(subject.test, label.test, test[,x])
train <- cbind(subject.train, label.train, train[,x])
fulldata <- rbind(train, test)
names(fulldata) <- nameslist
fulldata <- fulldata[order(fulldata$subject, fulldata$activity),]
fulldata <<- within(fulldata, activity <- factor(activity, labels = activitylist))
meandata <- matrix(nrow = 0, ncol = length(nameslist))
i = 1
for(i in 30){
workingsubject <- subset(fulldata, fulldata$subject == i)
y = 1
for(y in 6){
workingactivity <- subset(workingsubject, workingsubject$activity == y)
temp <- colMeans(workingactivity)
meandata <- rbind(meandata, temp)
y = y + 1
}
i = i + 1
}
meandata <<- meandata
}
run_analysis <- function(){
##First block of code will import important files from working directory.  Requires the following files to be present in the WD:
##features.txt, activity_labels.txt, X_train.txt, y_train.txt, X_test.txt, y_test.txt, subject_train.txt, subject_test.txt
features <- read.table("features.txt")
activities <- read.table("activity_labels.txt")
subject.test <- read.table("subject_test.txt")
subject.train <- read.table("subject_train.txt")
test <- read.table("X_test.txt")
train <- read.table("X_train.txt")
label.test <- read.table("y_test.txt")
label.train <- read.table("y_train.txt")
##Second block of code will create and modify a list of measurement names, and a variable x to later subset measurement data frames.
##MEasurement names are currently set to take the mean and standard deviation of the 33 main measurements outlined in the features_info.txt file.
##Excluded from this are the meanFreq value from each measurement, and the 5 averaged signal means listed at the bottom of features_info.txt
##Column names had duplicate words and brackets removes, '-' replaced by '.' for easy reading, and otherwise uneddited to allow for easier data manipulation
##and subsetting in downstream applicatons.
x <- grep("mean[^Freq]|std", features$V2)
features <- features[x,]
nameslist <- c("subject", "activity", as.character(features$V2))
nameslist <- tolower(nameslist)
nameslist <- gsub("-", ".", nameslist)
nameslist <- gsub("\\()", "", nameslist)
nameslist <- gsub("bodybody", "body", nameslist)
##Third block of code modifies the activity list to allow more ready data manipulation, changing to lower case, and replacing '_' with '.'
activitylist <- tolower(activities$V2)
activitylist <- gsub("_", ".", activitylist)
##Fourth block of code subsets the test and train measurement data by the field selected above (x), adds subjet and activity data, and combines the two data frames.
##column names and activity names are also added, as selected above, and ordered first by subject, then by (numberic) activity.
test <- cbind(subject.test, label.test, test[,x])
train <- cbind(subject.train, label.train, train[,x])
fulldata <- rbind(train, test)
names(fulldata) <- nameslist
fulldata <- fulldata[order(fulldata$subject, fulldata$activity),]
fulldata <<- within(fulldata, activity <- factor(activity, labels = activitylist))
meandata <- matrix(nrow = 0, ncol = length(nameslist))
i = 1
for(i in 30){
workingsubject <- subset(fulldata, fulldata$subject == i)
y = 1
for(y in 6){
workingactivity <- subset(workingsubject, workingsubject$activity == y)
temp <- colMeans(workingactivity)
meandata <- rbind(meandata, temp)
y = y + 1
}
i = i + 1
}
meandata <<- meandata
}
run_analysis()
View(meandata)
run_analysis <- function(){
##First block of code will import important files from working directory.  Requires the following files to be present in the WD:
##features.txt, activity_labels.txt, X_train.txt, y_train.txt, X_test.txt, y_test.txt, subject_train.txt, subject_test.txt
features <- read.table("features.txt")
activities <- read.table("activity_labels.txt")
subject.test <- read.table("subject_test.txt")
subject.train <- read.table("subject_train.txt")
test <- read.table("X_test.txt")
train <- read.table("X_train.txt")
label.test <- read.table("y_test.txt")
label.train <- read.table("y_train.txt")
##Second block of code will create and modify a list of measurement names, and a variable x to later subset measurement data frames.
##MEasurement names are currently set to take the mean and standard deviation of the 33 main measurements outlined in the features_info.txt file.
##Excluded from this are the meanFreq value from each measurement, and the 5 averaged signal means listed at the bottom of features_info.txt
##Column names had duplicate words and brackets removes, '-' replaced by '.' for easy reading, and otherwise uneddited to allow for easier data manipulation
##and subsetting in downstream applicatons.
x <- grep("mean[^Freq]|std", features$V2)
features <- features[x,]
nameslist <- c("subject", "activity", as.character(features$V2))
nameslist <- tolower(nameslist)
nameslist <- gsub("-", ".", nameslist)
nameslist <- gsub("\\()", "", nameslist)
nameslist <- gsub("bodybody", "body", nameslist)
##Third block of code modifies the activity list to allow more ready data manipulation, changing to lower case, and replacing '_' with '.'
activitylist <- tolower(activities$V2)
activitylist <- gsub("_", ".", activitylist)
##Fourth block of code subsets the test and train measurement data by the field selected above (x), adds subjet and activity data, and combines the two data frames.
##column names and activity names are also added, as selected above, and ordered first by subject, then by (numberic) activity.
test <- cbind(subject.test, label.test, test[,x])
train <- cbind(subject.train, label.train, train[,x])
fulldata <- rbind(train, test)
names(fulldata) <- nameslist
fulldata <- fulldata[order(fulldata$subject, fulldata$activity),]
fulldata <<- within(fulldata, activity <- factor(activity, labels = activitylist))
meandata <- matrix(nrow = 180, ncol = length(nameslist))
i = 1
z = 1
for(i in 30){
workingsubject <- subset(fulldata, fulldata$subject == i)
y = 1
for(y in 6){
workingactivity <- subset(workingsubject, workingsubject$activity == y)
temp <- colMeans(workingactivity)
meandata[z,] <- temp
y = y + 1
z = z + 1
}
i = i + 1
}
meandata <<- meandata
}
run_analysis()
View(meandata)
View(meandata)
run_analysis <- function(){
##First block of code will import important files from working directory.  Requires the following files to be present in the WD:
##features.txt, activity_labels.txt, X_train.txt, y_train.txt, X_test.txt, y_test.txt, subject_train.txt, subject_test.txt
features <- read.table("features.txt")
activities <- read.table("activity_labels.txt")
subject.test <- read.table("subject_test.txt")
subject.train <- read.table("subject_train.txt")
test <- read.table("X_test.txt")
train <- read.table("X_train.txt")
label.test <- read.table("y_test.txt")
label.train <- read.table("y_train.txt")
##Second block of code will create and modify a list of measurement names, and a variable x to later subset measurement data frames.
##MEasurement names are currently set to take the mean and standard deviation of the 33 main measurements outlined in the features_info.txt file.
##Excluded from this are the meanFreq value from each measurement, and the 5 averaged signal means listed at the bottom of features_info.txt
##Column names had duplicate words and brackets removes, '-' replaced by '.' for easy reading, and otherwise uneddited to allow for easier data manipulation
##and subsetting in downstream applicatons.
x <- grep("mean[^Freq]|std", features$V2)
features <- features[x,]
nameslist <- c("subject", "activity", as.character(features$V2))
nameslist <- tolower(nameslist)
nameslist <- gsub("-", ".", nameslist)
nameslist <- gsub("\\()", "", nameslist)
nameslist <- gsub("bodybody", "body", nameslist)
##Third block of code modifies the activity list to allow more ready data manipulation, changing to lower case, and replacing '_' with '.'
activitylist <- tolower(activities$V2)
activitylist <- gsub("_", ".", activitylist)
##Fourth block of code subsets the test and train measurement data by the field selected above (x), adds subjet and activity data, and combines the two data frames.
##column names and activity names are also added, as selected above, and ordered first by subject, then by (numberic) activity.
test <- cbind(subject.test, label.test, test[,x])
train <- cbind(subject.train, label.train, train[,x])
fulldata <- rbind(train, test)
names(fulldata) <- nameslist
fulldata <- fulldata[order(fulldata$subject, fulldata$activity),]
fulldata <<- within(fulldata, activity <- factor(activity, labels = activitylist))
meandata <- matrix(nrow = 180, ncol = length(nameslist))
i = 1
z = 1
for(i in 30){
workingsubject <- subset(fulldata, fulldata$subject == i)
y = 1
for(y in 6){
workingactivity <- subset(workingsubject, workingsubject$activity == y)
temp <- colMeans(workingactivity)
meandata[z,] = temp
y = y + 1
z = z + 1
}
i = i + 1
}
meandata <<- meandata
}
run_analysis()
run_analysis <- function(){
##First block of code will import important files from working directory.  Requires the following files to be present in the WD:
##features.txt, activity_labels.txt, X_train.txt, y_train.txt, X_test.txt, y_test.txt, subject_train.txt, subject_test.txt
features <- read.table("features.txt")
activities <- read.table("activity_labels.txt")
subject.test <- read.table("subject_test.txt")
subject.train <- read.table("subject_train.txt")
test <- read.table("X_test.txt")
train <- read.table("X_train.txt")
label.test <- read.table("y_test.txt")
label.train <- read.table("y_train.txt")
##Second block of code will create and modify a list of measurement names, and a variable x to later subset measurement data frames.
##MEasurement names are currently set to take the mean and standard deviation of the 33 main measurements outlined in the features_info.txt file.
##Excluded from this are the meanFreq value from each measurement, and the 5 averaged signal means listed at the bottom of features_info.txt
##Column names had duplicate words and brackets removes, '-' replaced by '.' for easy reading, and otherwise uneddited to allow for easier data manipulation
##and subsetting in downstream applicatons.
x <- grep("mean[^Freq]|std", features$V2)
features <- features[x,]
nameslist <- c("subject", "activity", as.character(features$V2))
nameslist <- tolower(nameslist)
nameslist <- gsub("-", ".", nameslist)
nameslist <- gsub("\\()", "", nameslist)
nameslist <- gsub("bodybody", "body", nameslist)
##Third block of code modifies the activity list to allow more ready data manipulation, changing to lower case, and replacing '_' with '.'
activitylist <- tolower(activities$V2)
activitylist <- gsub("_", ".", activitylist)
##Fourth block of code subsets the test and train measurement data by the field selected above (x), adds subjet and activity data, and combines the two data frames.
##column names and activity names are also added, as selected above, and ordered first by subject, then by (numberic) activity.
test <- cbind(subject.test, label.test, test[,x])
train <- cbind(subject.train, label.train, train[,x])
fulldata <- rbind(train, test)
names(fulldata) <- nameslist
fulldata <- fulldata[order(fulldata$subject, fulldata$activity),]
fulldata <<- within(fulldata, activity <- factor(activity, labels = activitylist))
meandata <- matrix(nrow = 180, ncol = length(nameslist))
i = 1
z = 1
for(i in 1:30){
workingsubject <- subset(fulldata, fulldata$subject == i)
y = 1
for(y in 1:6){
workingactivity <- subset(workingsubject, workingsubject$activity == y)
temp <- colMeans(workingactivity)
meandata[z,] = temp
y = y + 1
z = z + 1
}
i = i + 1
}
meandata <<- meandata
}
run_analysis()
View(meandata)
class(meandata)
test <- as.data.frame(meandata)
run_analysis <- function(){
##First block of code will import important files from working directory.  Requires the following files to be present in the WD:
##features.txt, activity_labels.txt, X_train.txt, y_train.txt, X_test.txt, y_test.txt, subject_train.txt, subject_test.txt
features <- read.table("features.txt")
activities <- read.table("activity_labels.txt")
subject.test <- read.table("subject_test.txt")
subject.train <- read.table("subject_train.txt")
test <- read.table("X_test.txt")
train <- read.table("X_train.txt")
label.test <- read.table("y_test.txt")
label.train <- read.table("y_train.txt")
##Second block of code will create and modify a list of measurement names, and a variable x to later subset measurement data frames.
##MEasurement names are currently set to take the mean and standard deviation of the 33 main measurements outlined in the features_info.txt file.
##Excluded from this are the meanFreq value from each measurement, and the 5 averaged signal means listed at the bottom of features_info.txt
##Column names had duplicate words and brackets removes, '-' replaced by '.' for easy reading, and otherwise uneddited to allow for easier data manipulation
##and subsetting in downstream applicatons.
x <- grep("mean[^Freq]|std", features$V2)
features <- features[x,]
nameslist <- c("subject", "activity", as.character(features$V2))
nameslist <- tolower(nameslist)
nameslist <- gsub("-", ".", nameslist)
nameslist <- gsub("\\()", "", nameslist)
nameslist <- gsub("bodybody", "body", nameslist)
##Third block of code modifies the activity list to allow more ready data manipulation, changing to lower case, and replacing '_' with '.'
activitylist <- tolower(activities$V2)
activitylist <- gsub("_", ".", activitylist)
##Fourth block of code subsets the test and train measurement data by the field selected above (x), adds subjet and activity data, and combines the two data frames.
##column names and activity names are also added, as selected above, and ordered first by subject, then by (numberic) activity.
test <- cbind(subject.test, label.test, test[,x])
train <- cbind(subject.train, label.train, train[,x])
fulldata <- rbind(train, test)
names(fulldata) <- nameslist
fulldata <- fulldata[order(fulldata$subject, fulldata$activity),]
fulldata <<- within(fulldata, activity <- factor(activity, labels = activitylist))
meandata <- matrix(nrow = 0, ncol = length(nameslist))
i = 1
for(i in 1:30){
workingsubject <- subset(fulldata, fulldata$subject == i)
y = 1
for(y in 1:6){
workingactivity <- subset(workingsubject, workingsubject$activity == y)
temp <- colMeans(workingactivity)
meandata <- rbind(meandata, temp)
y = y + 1
}
i = i + 1
}
names(meandata) <- nameslist
meandata <- within(meandata, activity <- factor(activity, labels = activitylist))
meandata <<- as.data.frame(meandata)
}
run_analysis()
run_analysis <- function(){
##First block of code will import important files from working directory.  Requires the following files to be present in the WD:
##features.txt, activity_labels.txt, X_train.txt, y_train.txt, X_test.txt, y_test.txt, subject_train.txt, subject_test.txt
features <- read.table("features.txt")
activities <- read.table("activity_labels.txt")
subject.test <- read.table("subject_test.txt")
subject.train <- read.table("subject_train.txt")
test <- read.table("X_test.txt")
train <- read.table("X_train.txt")
label.test <- read.table("y_test.txt")
label.train <- read.table("y_train.txt")
##Second block of code will create and modify a list of measurement names, and a variable x to later subset measurement data frames.
##MEasurement names are currently set to take the mean and standard deviation of the 33 main measurements outlined in the features_info.txt file.
##Excluded from this are the meanFreq value from each measurement, and the 5 averaged signal means listed at the bottom of features_info.txt
##Column names had duplicate words and brackets removes, '-' replaced by '.' for easy reading, and otherwise uneddited to allow for easier data manipulation
##and subsetting in downstream applicatons.
x <- grep("mean[^Freq]|std", features$V2)
features <- features[x,]
nameslist <- c("subject", "activity", as.character(features$V2))
nameslist <- tolower(nameslist)
nameslist <- gsub("-", ".", nameslist)
nameslist <- gsub("\\()", "", nameslist)
nameslist <- gsub("bodybody", "body", nameslist)
##Third block of code modifies the activity list to allow more ready data manipulation, changing to lower case, and replacing '_' with '.'
activitylist <- tolower(activities$V2)
activitylist <- gsub("_", ".", activitylist)
##Fourth block of code subsets the test and train measurement data by the field selected above (x), adds subjet and activity data, and combines the two data frames.
##column names and activity names are also added, as selected above, and ordered first by subject, then by (numberic) activity.
test <- cbind(subject.test, label.test, test[,x])
train <- cbind(subject.train, label.train, train[,x])
fulldata <- rbind(train, test)
names(fulldata) <- nameslist
fulldata <- fulldata[order(fulldata$subject, fulldata$activity),]
fulldata <<- within(fulldata, activity <- factor(activity, labels = activitylist))
meandata <- matrix(nrow = 0, ncol = length(nameslist))
i = 1
for(i in 1:30){
workingsubject <- subset(fulldata, fulldata$subject == i)
y = 1
for(y in 1:6){
workingactivity <- subset(workingsubject, workingsubject$activity == y)
temp <- colMeans(workingactivity)
meandata <- rbind(meandata, temp)
y = y + 1
}
i = i + 1
}
meandata <- as.data.frame(meandata)
names(meandata) <- nameslist
meandata <- within(meandata, activity <- factor(activity, labels = activitylist))
meandata <<- meandata
}
run_analysis()
View(meandata)
splitdata <- split(meandata, meandata$subject)
splitdata
splitdata <- as.data.frame(splitdata)
View(splitdata)
test <- data.frame
test <- data.frame()
View(test)
run_analysis <- function(){
##First block of code will import important files from working directory.  Requires the following files to be present in the WD:
##features.txt, activity_labels.txt, X_train.txt, y_train.txt, X_test.txt, y_test.txt, subject_train.txt, subject_test.txt
features <- read.table("features.txt")
activities <- read.table("activity_labels.txt")
subject.test <- read.table("subject_test.txt")
subject.train <- read.table("subject_train.txt")
test <- read.table("X_test.txt")
train <- read.table("X_train.txt")
label.test <- read.table("y_test.txt")
label.train <- read.table("y_train.txt")
##Second block of code will create and modify a list of measurement names, and a variable x to later subset measurement data frames.
##MEasurement names are currently set to take the mean and standard deviation of the 33 main measurements outlined in the features_info.txt file.
##Excluded from this are the meanFreq value from each measurement, and the 5 averaged signal means listed at the bottom of features_info.txt
##Column names had duplicate words and brackets removes, '-' replaced by '.' for easy reading, and otherwise uneddited to allow for easier data manipulation
##and subsetting in downstream applicatons.
x <- grep("mean[^Freq]|std", features$V2)
features <- features[x,]
nameslist <- c("subject", "activity", as.character(features$V2))
nameslist <- tolower(nameslist)
nameslist <- gsub("-", ".", nameslist)
nameslist <- gsub("\\()", "", nameslist)
nameslist <- gsub("bodybody", "body", nameslist)
##Third block of code modifies the activity list to allow more ready data manipulation, changing to lower case, and replacing '_' with '.'
activitylist <- tolower(activities$V2)
activitylist <- gsub("_", ".", activitylist)
##Fourth block of code subsets the test and train measurement data by the field selected above (x), adds subjet and activity data, and combines the two data frames.
##column names and activity names are also added, as selected above, and ordered first by subject, then by (numberic) activity.
test <- cbind(subject.test, label.test, test[,x])
train <- cbind(subject.train, label.train, train[,x])
fulldata <- rbind(train, test)
names(fulldata) <- nameslist
fulldata <- fulldata[order(fulldata$subject, fulldata$activity),]
fulldata <<- within(fulldata, activity <- factor(activity, labels = activitylist))
meandata <- data.frame()
i = 1
for(i in 1:30){
workingsubject <- subset(fulldata, fulldata$subject == i)
y = 1
for(y in 1:6){
workingactivity <- subset(workingsubject, workingsubject$activity == y)
temp <- colMeans(workingactivity)
meandata <- rbind(meandata, temp)
y = y + 1
}
i = i + 1
}
names(meandata) <- nameslist
meandata <- within(meandata, activity <- factor(activity, labels = activitylist))
meandata <<- meandata
}
run_analysis()
